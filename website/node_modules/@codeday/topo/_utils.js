"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.childrenOfType = exports.makePureBox = exports.pureRef = exports.wrapHtml = exports.setChildProps = exports.reactChildrenMapRecursive = exports.debounce = exports.dereferenceDottedString = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Box = _interopRequireDefault(require("./Atom/Box"));

var _this = void 0;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var dereferenceDottedString = function dereferenceDottedString(str, obj) {
  return str.split('.').reduce(function (o, i) {
    return o[i];
  }, obj);
};

exports.dereferenceDottedString = dereferenceDottedString;

var debounce = function debounce(func, wait, immediate) {
  var timeout;
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var context = _this;

    var later = function later() {
      timeout = null;
      if (!immediate) func.apply(context, args);
    };

    var callNow = immediate && !timeout;
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
    if (callNow) func.apply(context, args);
  };
};

exports.debounce = debounce;

var reactChildrenMapRecursive = function reactChildrenMapRecursive(children, fn) {
  return _react["default"].Children.map(children, function (child) {
    if (!_react["default"].isValidElement(child)) {
      return child;
    }

    if (child.props.children) {
      return fn(_react["default"].cloneElement(child, {
        children: reactChildrenMapRecursive(child.props.children, fn)
      }));
    }

    return fn(child);
  });
};

exports.reactChildrenMapRecursive = reactChildrenMapRecursive;

var setChildProps = function setChildProps(props, defaultProps, derivedProps) {
  return function (child) {
    return _react["default"].cloneElement(child, _objectSpread({}, defaultProps || {}, {}, child.props || {}, {}, props || {}, {}, derivedProps ? derivedProps(child) : []));
  };
};

exports.setChildProps = setChildProps;

var wrapHtml = function wrapHtml(nodes) {
  return (Array.isArray(nodes) ? _react["default"].Children.toArray(nodes) : [nodes]).map(function (e) {
    return typeof e === 'string' || !e.prototype || !e.prototype.isReactComponent ? /*#__PURE__*/_react["default"].createElement(_Box["default"], null, e) : e;
  });
};

exports.wrapHtml = wrapHtml;

var pureRef = function pureRef(Component) {
  return (0, _react.forwardRef)(function (props, ref) {
    return (0, _react.useMemo)(function () {
      return Component(props, ref);
    }, [props, ref]);
  });
};

exports.pureRef = pureRef;

var makePureBox = function makePureBox(name, Component) {
  var DerivedBox = pureRef(function (_ref, ref) {
    var children = _ref.children,
        props = _objectWithoutProperties(_ref, ["children"]);

    return /*#__PURE__*/_react["default"].createElement(_Box["default"], _extends({}, props, {
      ref: ref
    }), Component ? /*#__PURE__*/_react["default"].createElement(Component, null, children) : children);
  });
  DerivedBox.displayName = name;
  DerivedBox.propTypes = _objectSpread({}, _Box["default"].propTypes, {
    children: _propTypes["default"].oneOfType([_propTypes["default"].node, _propTypes["default"].arrayOf(_propTypes["default"].node)])
  });
  DerivedBox.defaultProps = _objectSpread({}, _Box["default"].defaultProps, {
    children: []
  });
  return DerivedBox;
};

exports.makePureBox = makePureBox;

var childrenOfType = function childrenOfType(children, type) {
  return _react["default"].Children.toArray(children).filter(function (e) {
    return e.type === type;
  });
};

exports.childrenOfType = childrenOfType;