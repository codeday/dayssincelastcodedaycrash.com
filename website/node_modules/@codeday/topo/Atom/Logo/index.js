"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Community = exports.CodeCup = exports.Clear = exports.Evangelist = exports.CsFest = exports.Labs = exports.CodeDay = exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Box = _interopRequireDefault(require("../Box"));

var _Text = _interopRequireDefault(require("../Text"));

var _utils = require("../../_utils");

var _recompose = require("recompose");

var Svgs = _interopRequireWildcard(require("./svgs"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var upperFirst = function upperFirst(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
};

var Lockup = (0, _utils.pureRef)(function (_ref, ref) {
  var logo = _ref.logo,
      text = _ref.text,
      logoColor = _ref.logoColor,
      textColor = _ref.textColor,
      color = _ref.color,
      props = _objectWithoutProperties(_ref, ["logo", "text", "logoColor", "textColor", "color"]);

  return /*#__PURE__*/_react["default"].createElement(_Box["default"], _extends({
    d: "inline",
    style: {
      textDecoration: 'none'
    }
  }, props, {
    ref: ref
  }), /*#__PURE__*/_react["default"].createElement(_Box["default"], {
    color: logoColor || color || 'current.primary',
    height: "1.1em",
    d: "inline"
  }, logo), /*#__PURE__*/_react["default"].createElement(_Box["default"], {
    color: textColor || color || 'current.text',
    height: "1em",
    d: "inline"
  }, text));
});
Lockup.displayName = 'Lockup';
Lockup.propTypes = _objectSpread({}, Lockup.propTypes, {
  logo: _propTypes["default"].node.isRequired,
  text: _propTypes["default"].node.isRequired,
  color: _propTypes["default"].string,
  logoColor: _propTypes["default"].string,
  textColor: _propTypes["default"].string
});
Lockup.defaultProps = _objectSpread({}, Lockup.defaultProps, {
  color: null,
  logoColor: null,
  textColor: null
});
var Logo = (0, _utils.pureRef)(function (_ref2, ref) {
  var program = _ref2.program,
      withText = _ref2.withText,
      text = _ref2.text,
      props = _objectWithoutProperties(_ref2, ["program", "withText", "text"]);

  var logoPart = _react["default"].createElement(Svgs["".concat(upperFirst(program))], {
    style: {
      display: 'inline'
    }
  });

  var textPart = /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null);

  if (typeof text === 'string') {
    textPart = /*#__PURE__*/_react["default"].createElement(_Text["default"], {
      d: "inline",
      fontSize: "0.9em",
      fontWeight: "bold",
      fontFamily: "heading",
      verticalAlign: "middle",
      paddingLeft: "2",
      position: "relative",
      top: "0.05em"
    }, text);
  } else if (withText) {
    textPart = _react["default"].createElement(Svgs["".concat(upperFirst(program), "Text")], {
      style: {
        display: 'inline'
      }
    });
  }

  return /*#__PURE__*/_react["default"].createElement(Lockup, _extends({
    logo: logoPart,
    text: textPart
  }, props, {
    ref: ref
  }));
});
Logo.displayName = 'Logo';
Logo.propTypes = _objectSpread({}, Logo.propTypes, {
  program: _propTypes["default"].string.isRequired,
  text: _propTypes["default"].string,
  withText: _propTypes["default"].bool
});
Logo.defaultProps = _objectSpread({}, Logo.defaultProps, {
  text: null,
  withText: false
});
var _default = Logo;
exports["default"] = _default;
var CodeDay = (0, _recompose.withProps)({
  program: 'codeday'
})(Logo);
exports.CodeDay = CodeDay;
var Labs = (0, _recompose.withProps)({
  program: 'labs'
})(Logo);
exports.Labs = Labs;
var CsFest = (0, _recompose.withProps)({
  program: 'csfest'
})(Logo);
exports.CsFest = CsFest;
var Evangelist = (0, _recompose.withProps)({
  program: 'evangelist'
})(Logo);
exports.Evangelist = Evangelist;
var Clear = (0, _recompose.withProps)({
  program: 'clear'
})(Logo);
exports.Clear = Clear;
var CodeCup = (0, _recompose.withProps)({
  program: 'codecup'
})(Logo);
exports.CodeCup = CodeCup;
var Community = (0, _recompose.withProps)({
  program: 'community'
})(Logo);
exports.Community = Community;