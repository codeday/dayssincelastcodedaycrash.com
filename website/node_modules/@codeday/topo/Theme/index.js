"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.codedayTheme = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _core = require("@emotion/core");

var _ThemeProvider = _interopRequireDefault(require("@chakra-ui/core/dist/ThemeProvider"));

var _CSSReset = _interopRequireDefault(require("@chakra-ui/core/dist/CSSReset"));

var _theme = _interopRequireDefault(require("@chakra-ui/core/dist/theme"));

var _fathomReact = _interopRequireDefault(require("fathom-react"));

var _reactStripeJs = require("@stripe/react-stripe-js");

var _stripeJs = require("@stripe/stripe-js");

var _vars = _interopRequireDefault(require("./vars"));

var _Chatra = _interopRequireDefault(require("./ComponentProviders/Chatra"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  @import url(https://f1.srnd.org/topo/fonts/all.css);\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// eslint-disable-next-line no-secrets/no-secrets
var stripePromise = (0, _stripeJs.loadStripe)('pk_v0AIOIy377403GN0FKltGR9gOAAUe');

var codedayTheme = _objectSpread({}, _theme["default"], {}, _vars["default"]);

exports.codedayTheme = codedayTheme;
var customCss = (0, _core.css)(_templateObject());

var Provider = function Provider(_ref) {
  var analyticsId = _ref.analyticsId,
      brandColor = _ref.brandColor,
      withChat = _ref.withChat,
      children = _ref.children;
  return /*#__PURE__*/_react["default"].createElement(_ThemeProvider["default"], {
    theme: _objectSpread({}, codedayTheme, {
      colors: _objectSpread({}, codedayTheme.colors, {
        brand: codedayTheme.colors[brandColor] || colors.brand
      })
    })
  }, /*#__PURE__*/_react["default"].createElement(_CSSReset["default"], {
    config: function config(theme) {
      return theme.colors.modes;
    }
  }), /*#__PURE__*/_react["default"].createElement(_core.Global, {
    styles: customCss
  }), withChat && /*#__PURE__*/_react["default"].createElement(_Chatra["default"], {
    chatraId: "5wsfeENwi3WqHrn3n"
  }), /*#__PURE__*/_react["default"].createElement(_fathomReact["default"], {
    customDomain: "polarbear.codeday.org",
    siteId: analyticsId
  }, /*#__PURE__*/_react["default"].createElement(_reactStripeJs.Elements, {
    stripe: stripePromise
  }, children)));
};

Provider.propTypes = {
  children: _propTypes["default"].oneOfType([_propTypes["default"].arrayOf(_propTypes["default"].element), _propTypes["default"].element]).isRequired,
  analyticsId: _propTypes["default"].string,
  brandColor: _propTypes["default"].string,
  withChat: _propTypes["default"].bool
};
Provider.defaultProps = {
  analyticsId: null,
  brandColor: null,
  withChat: false
};
var _default = Provider;
exports["default"] = _default;